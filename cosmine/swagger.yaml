openapi: 3.0.0
info:
  title: Cosmine API
  version: 1.0.0
  description: |
    Cosmine 서비스의 주요 API 문서입니다.
    회원가입, 로그인, 게시글/리뷰, 아이템, 파일 업로드 등 전반 기능을 테스트할 수 있습니다.

servers:
  - url: http://localhost:3000

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id: { type: integer }
        email: { type: string }
        name: { type: string }
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }
    Post:
      type: object
      properties:
        id: { type: integer }
        category: { type: string }
        authorId: { type: integer }
        title: { type: string }
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/Attachment"
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }
    Attachment:
      type: object
      properties:
        filename: { type: string }
        originalname: { type: string }
        path: { type: string }
        size: { type: integer }
        mimetype: { type: string }
    ReviewDetail:
      type: object
      properties:
        id: { type: integer }
        postId: { type: integer }
        raiting: { type: number }
        title: { type: string }
        content: { type: string }
    Item:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        description: { type: string }
        price: { type: number }
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }

paths:
  /auth/register:
    post:
      summary: 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string }
                name: { type: string }
                password: { type: string }
      responses:
        "201":
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
                  data: { $ref: "#/components/schemas/User" }
        "409":
          description: 중복가입 불가
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }

  /auth/login:
    post:
      summary: 로그인 (JWT 토큰 발급)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string }
                password: { type: string }
      responses:
        "200":
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
                  accessToken: { type: string }
                  user: { $ref: "#/components/schemas/User" }
        "400":
          description: 이메일 또는 비밀번호 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }

  /users:
    get:
      summary: 전체 유저 조회
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 유저 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

  /posts:
    post:
      summary: 게시글/리뷰 작성 (파일 첨부 가능)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category: { type: string }
                raiting: { type: number }
                title: { type: string }
                content: { type: string }
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: 게시글 생성 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
    get:
      summary: 게시글 전체 조회
      responses:
        "200":
          description: 게시글 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"

  /posts/{postId}/{reviewDetailId}:
    patch:
      summary: 게시글/리뷰 수정 (파일 첨부 가능)
      security:
        - BearerAuth: []
      parameters:
        - name: postId
          in: path
          required: true
          schema: { type: integer }
        - name: reviewDetailId
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category: { type: string }
                raiting: { type: number }
                title: { type: string }
                content: { type: string }
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: 게시글/리뷰 수정 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
    delete:
      summary: 게시글/리뷰 삭제
      security:
        - BearerAuth: []
      parameters:
        - name: postId
          in: path
          required: true
          schema: { type: integer }
        - name: reviewDetailId
          in: path
          required: true
          schema: { type: integer }
      responses:
        "200":
          description: 삭제 성공

  /items:
    post:
      summary: 아이템 등록
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                description: { type: string }
                price: { type: number }
      responses:
        "201":
          description: 아이템 등록 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
    get:
      summary: 아이템 목록 조회
      responses:
        "200":
          description: 아이템 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"

  /items/{id}:
    get:
      summary: 아이템 상세 조회
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        "200":
          description: 아이템 상세
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "404":
          description: 없음
    put:
      summary: 아이템 수정
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                description: { type: string }
                price: { type: number }
      responses:
        "200":
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "404":
          description: 없음
    delete:
      summary: 아이템 삭제
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        "200":
          description: 삭제 성공
        "404":
          description: 없음
